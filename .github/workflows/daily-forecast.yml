name: Daily Forecast Bot

# grant the GITHUB_TOKEN write access so our commit step can push
permissions:
  contents: write

on:
  schedule:
    # runs every weekday at 9 AM ET (13:00 UTC)
    - cron: '0 13 * * 1-5'
  workflow_dispatch:

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Generate config/settings.yaml
        run: |
          mkdir -p config
          cat <<EOF > config/settings.yaml
          teams:
            webhook_url: "${{ secrets.TEAMS_WEBHOOK_URL }}"
          EOF

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Forecast Bot
        run: python src/fetch_forecast.py
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}

      - name: Commit updated CSV & seen_ids
        uses: stefanzweifel/git-auto-commit-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file_pattern: |
            data/processed/filtered_forecast.csv
            data/processed/seen_ids.json
          commit_message: 'chore: update processed CSV and seen_ids'
          branch: main
          commit_user_name: 'github-actions'
          commit_user_email: 'github-actions@github.com'

      - name: Create or update GitHub Release
        id: create_release
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: "Latest Filtered Forecast CSV"
          draft: false
          prerelease: false
          allow_updates: true

      - name: Upload CSV as release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: data/processed/filtered_forecast.csv
          asset_name: filtered_forecast.csv
          asset_content_type: text/csv

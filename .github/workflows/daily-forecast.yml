name: Daily Forecast Bot

# grant the GITHUB_TOKEN write access so our commit step can push
permissions:
  contents: write

on:
  schedule:
    # runs every weekday at 9 AM ET (13:00 UTC)
    - cron: '0 13 * * 1-5'
  workflow_dispatch:

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Generate config/settings.yaml
        run: |
          mkdir -p config
          cat <<EOF > config/settings.yaml
          teams:
            webhook_url: "${{ secrets.TEAMS_WEBHOOK_URL }}"
          EOF

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Forecast Bot
        run: python src/fetch_forecast.py
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}

      - name: Cleanup old forecast files
        run: |
          # Find and remove CSV files older than 30 days
          python -c '
          import os
          import glob
          from datetime import datetime, timedelta
          
          # Get all dated forecast files
          pattern = "data/processed/filtered_forecast_*.csv"
          files = glob.glob(pattern)
          
          # Calculate cutoff date (30 days ago)
          cutoff = datetime.now() - timedelta(days=30)
          
          # Remove files older than cutoff
          for file in files:
              # Extract date from filename (format: filtered_forecast_YYYY-MM-DD.csv)
              try:
                  date_str = file.split("filtered_forecast_")[1].replace(".csv", "")
                  file_date = datetime.strptime(date_str, "%Y-%m-%d")
                  
                  if file_date < cutoff:
                      os.remove(file)
                      print(f"Removed old file: {file}")
              except (IndexError, ValueError):
                  print(f"Skipping file with invalid date format: {file}")
          '

      - name: Commit updated files
        uses: stefanzweifel/git-auto-commit-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file_pattern: |
            data/processed/filtered_forecast_*.csv
            data/processed/filtered_forecast.csv
            data/processed/seen_ids.json
          commit_message: 'chore: update forecast data and cleanup old files'
          branch: main
          commit_user_name: 'github-actions'
          commit_user_email: 'github-actions@github.com'

      - name: Get today's date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Create dated release with CSV
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: forecast-${{ steps.date.outputs.date }}
          name: Forecast Data ${{ steps.date.outputs.date }}
          artifacts: "data/processed/filtered_forecast_${{ steps.date.outputs.date }}.csv"
          allowUpdates: false
          makeLatest: false
